@page "/chat"
@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly

<h3>Chat</h3>

@if (IsConnected)
{
    <div class="form-group w-25">

        <label for="userInput">User</label>
        <input id="userInput" type="text" @bind="userInput" class="form-control" />

        <label for="messageInput">Message</label>
        <input id="messageInput" type="text" @bind="messageInput" class="form-control" />

        <button @onclick="Send" class="btn btn-primary mt-2">Send</button>

    </div>

    <ul>
        @foreach (var message in messages)
        {
            <li>@message</li>
        }
    </ul>
}

@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager
            .ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodingMessage = $"{user}: {message}";
            messages.Add(encodingMessage);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    Task Send() => hubConnection.SendAsync("SendMessage", userInput, messageInput);

    public bool IsConnected => hubConnection.State.Equals(HubConnectionState.Connected);

}
